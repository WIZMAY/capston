/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2021-05-11 11:24:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import DB.connection.DBConnection;

public final class Account_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("DB.connection.DBConnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");

String s_id = (String) session.getAttribute("sessionID");
DBConnection db = new DBConnection();
Connection conn = db.getConnection();

PreparedStatement pstmt = null;
ResultSet rs = null;
String sql = "SELECT * FROM user WHERE id=?";

pstmt = conn.prepareStatement(sql);
pstmt.setString(1, s_id);
rs = pstmt.executeQuery();

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t// 비밀번호 확인 체크\r\n");
      out.write("\tfunction newpwCheck(){\r\n");
      out.write("\t\tif(document.getElementById(\"newpass\").value !=document.getElementById(\"newpassre\").value){\r\n");
      out.write("\t\t\tdocument.getElementById(\"newpack\").innerHTML = '새 비밀번호가 일치하지 않습니다.';\r\n");
      out.write("\t\t\tdocument.getElementById(\"newpack\").style.color='red';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("<title>내정보</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<div id=\"gtiwrap\">\r\n");
      out.write("\t\t<img id=\"gti\" src=\"img/gt.jpg\" />\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"pagewrap\">\r\n");
      out.write("\t\t<div id=\"plm\">\r\n");
      out.write("\t\t\t<div id=\"gplmt\">&nbsp&nbsp&nbsp마이페이지</div>\r\n");
      out.write("\t\t\t<div id=\"gplmc1\" onclick=\"location.href='Account.jsp';\">&nbsp&nbsp&nbsp내정보관리</div>\r\n");
      out.write("\t\t\t<div id=\"gplmc2\" onclick=\"location.href='Mileage.jsp';\">&nbsp&nbsp&nbsp적립금관리</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!--\r\n");
      out.write("        -->\r\n");
      out.write("\t\t<div id=\"pd\">\r\n");
      out.write("\t\t\t<div id=\"pdtt\">마이페이지</div>\r\n");
      out.write("\t\t\t<div id=\"pdtd\">내 정보관리</div>\r\n");
      out.write("\t\t\t<div id=\"pd3\">\r\n");
      out.write("\t\t\t\t");

				if (s_id == null) {
					response.sendRedirect("LoginForm.jsp");
				} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t<form name=\"update_form\" action=\"UpdatePro.jsp\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t");

						if (rs.next()) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>아이디</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"id\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"");
      out.print(rs.getString("id"));
      out.write("\" readonly/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>비밀번호</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"password\" name=\"pw\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"");
      out.print(rs.getString("password"));
      out.write("\"/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>새 비밀번호</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"password\" name=\"newpw\" id=\"newpass\"/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>새 비밀번호 확인</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"password\" name=\"newpwre\" id=\"newpassre\" onchange=\"newpwCheck()\"/>&nbsp;<span id=\"newpack\"></span></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>이름</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"username\" value=\"");
      out.print(rs.getString("name"));
      out.write("\" readonly/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>생년월일</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"date\" name=\"birthdate\" value=\"");
      out.print(rs.getString("birthday"));
      out.write("\"/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>이메일</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"email\" value=\"");
      out.print(rs.getString("email"));
      out.write("\"/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>핸드폰</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"phone\" value=\"");
      out.print(rs.getString("phone_number"));
      out.write("\"/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>성별</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input type=\"text\" name=\"gender\" value=\"");
      out.print(rs.getString("sex"));
      out.write("\"/></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"수정\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t<button>패널가입하기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"footer\">\r\n");
      out.write("\t\t[62265] 광주광역시 광산구 첨단내촌로 70번길 55(월계동 769-4) 404호<br>T :\r\n");
      out.write("\t\t062-374-7011 F : 062-374-7013 E : polinsight@gmail.com<br> <br>COPYRIGHT(C)\r\n");
      out.write("\t\t2019 POLINSIGHT. ALL RIGHTS RESERVED\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
